Q1: Which registers contain arguments to functions? For example, which register holds 13 in main’s call to printf?
A: 函数参数的寄存器为 a0~a7. printf 的 13 存在寄存器 a2 中
Q2: Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
A: 在 40 行可以看到, 编译器进行了函数内联, 直接将 f(8)+1的值 12 计算出来了.
Q3: At what address is the function printf located?
A: 由第 43 和 44 行可以看出, jalr 跳转的地址为 0x30+1536=0x630, 即函数 printf 的地址为 0x630
Q4: What value is in the register ra just after the jalr to printf in main?
A: 根据 jalr 指令的功能, 在刚跳转后 ra 的值为 pc+4=0x34+4=0x38.
Q5: Run the following code
What is the output?
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
A: 输出: HE110 World
若为大端对齐, i 需要设置为 0x726c6400, 不需要改变 57616的值(因为他是按照二进制数字读取的而非单个字符).
Q6: In the following code, what is going to be printed after y=? (note: the answer is not a specific value.) Why does this happen?
A: 根据函数的传参规则, y= 后跟的值应该为寄存器 a2 的值.


